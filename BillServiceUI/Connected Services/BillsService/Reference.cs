//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BillServiceUI.BillsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BillsService.IBillsService")]
    public interface IBillsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/Hello", ReplyAction="http://tempuri.org/IBillsService/HelloResponse")]
        string Hello();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/Hello", ReplyAction="http://tempuri.org/IBillsService/HelloResponse")]
        System.Threading.Tasks.Task<string> HelloAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/GetBills", ReplyAction="http://tempuri.org/IBillsService/GetBillsResponse")]
        string GetBills(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/GetBills", ReplyAction="http://tempuri.org/IBillsService/GetBillsResponse")]
        System.Threading.Tasks.Task<string> GetBillsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/Register", ReplyAction="http://tempuri.org/IBillsService/RegisterResponse")]
        string Register(string username, string first_name, string last_name, string password, string email, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/Register", ReplyAction="http://tempuri.org/IBillsService/RegisterResponse")]
        System.Threading.Tasks.Task<string> RegisterAsync(string username, string first_name, string last_name, string password, string email, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/Login", ReplyAction="http://tempuri.org/IBillsService/LoginResponse")]
        string Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/Login", ReplyAction="http://tempuri.org/IBillsService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/GetLiabilities", ReplyAction="http://tempuri.org/IBillsService/GetLiabilitiesResponse")]
        string GetLiabilities(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/GetLiabilities", ReplyAction="http://tempuri.org/IBillsService/GetLiabilitiesResponse")]
        System.Threading.Tasks.Task<string> GetLiabilitiesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/GetUserData", ReplyAction="http://tempuri.org/IBillsService/GetUserDataResponse")]
        string GetUserData(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/GetUserData", ReplyAction="http://tempuri.org/IBillsService/GetUserDataResponse")]
        System.Threading.Tasks.Task<string> GetUserDataAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/UpdateUser", ReplyAction="http://tempuri.org/IBillsService/UpdateUserResponse")]
        string UpdateUser(string serialized);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/UpdateUser", ReplyAction="http://tempuri.org/IBillsService/UpdateUserResponse")]
        System.Threading.Tasks.Task<string> UpdateUserAsync(string serialized);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/DeleteUser", ReplyAction="http://tempuri.org/IBillsService/DeleteUserResponse")]
        string DeleteUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/DeleteUser", ReplyAction="http://tempuri.org/IBillsService/DeleteUserResponse")]
        System.Threading.Tasks.Task<string> DeleteUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/GetPdf", ReplyAction="http://tempuri.org/IBillsService/GetPdfResponse")]
        byte[] GetPdf(int billId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBillsService/GetPdf", ReplyAction="http://tempuri.org/IBillsService/GetPdfResponse")]
        System.Threading.Tasks.Task<byte[]> GetPdfAsync(int billId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBillsServiceChannel : BillServiceUI.BillsService.IBillsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BillsServiceClient : System.ServiceModel.ClientBase<BillServiceUI.BillsService.IBillsService>, BillServiceUI.BillsService.IBillsService {
        
        public BillsServiceClient() {
        }
        
        public BillsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BillsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BillsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BillsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Hello() {
            return base.Channel.Hello();
        }
        
        public System.Threading.Tasks.Task<string> HelloAsync() {
            return base.Channel.HelloAsync();
        }
        
        public string GetBills(int userId) {
            return base.Channel.GetBills(userId);
        }
        
        public System.Threading.Tasks.Task<string> GetBillsAsync(int userId) {
            return base.Channel.GetBillsAsync(userId);
        }
        
        public string Register(string username, string first_name, string last_name, string password, string email, string phone) {
            return base.Channel.Register(username, first_name, last_name, password, email, phone);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(string username, string first_name, string last_name, string password, string email, string phone) {
            return base.Channel.RegisterAsync(username, first_name, last_name, password, email, phone);
        }
        
        public string Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public string GetLiabilities(int userId) {
            return base.Channel.GetLiabilities(userId);
        }
        
        public System.Threading.Tasks.Task<string> GetLiabilitiesAsync(int userId) {
            return base.Channel.GetLiabilitiesAsync(userId);
        }
        
        public string GetUserData(int userId) {
            return base.Channel.GetUserData(userId);
        }
        
        public System.Threading.Tasks.Task<string> GetUserDataAsync(int userId) {
            return base.Channel.GetUserDataAsync(userId);
        }
        
        public string UpdateUser(string serialized) {
            return base.Channel.UpdateUser(serialized);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserAsync(string serialized) {
            return base.Channel.UpdateUserAsync(serialized);
        }
        
        public string DeleteUser(int userId) {
            return base.Channel.DeleteUser(userId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserAsync(int userId) {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public byte[] GetPdf(int billId) {
            return base.Channel.GetPdf(billId);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetPdfAsync(int billId) {
            return base.Channel.GetPdfAsync(billId);
        }
    }
}
